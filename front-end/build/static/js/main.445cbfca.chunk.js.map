{"version":3,"sources":["common/context/RoleContext.tsx","common/context/ToggleSidebarContext.tsx","containers/Bank/Navigator/store/data.tsx","containers/Bank/Navigator/styles.ts","common/context/SidebarStaffContext.tsx","common/context/SidebarCustomerContext.tsx","common/context/SidebarAdminContext.tsx","containers/Bank/Navigator/index.tsx","common/components/Overlay.tsx","containers/Bank/SidebarCustomer/Accountmanagement/styles.ts","containers/Bank/SidebarCustomer/Accountmanagement/index.tsx","containers/Bank/SidebarCustomer/styles.ts","containers/Bank/SidebarCustomer/index.tsx","common/context/NavigatorContext.tsx","containers/Bank/SidebarStaff/CustomerManagement/styles.ts","containers/Bank/SidebarStaff/CustomerManagement/index.tsx","containers/Bank/SidebarStaff/Accountmanagement/index.tsx","containers/Bank/SidebarStaff/styles.ts","containers/Bank/SidebarStaff/index.tsx","containers/Bank/styles.ts","containers/Bank/index.tsx","containers/Signup/styles.ts","containers/Login/styles.ts","containers/Login/index.tsx","containers/Signup/index.tsx","common/styles/mixins.ts","containers/Onboarding/styles.ts","containers/Onboarding/index.tsx","common/context/GlobalLoadingContext.tsx","common/components/GlobalLoadingScreen.tsx","common/context/AuthContext.tsx","common/styles/theme.ts","common/context/ThemeContext.tsx","common/context/ReactContext.tsx","common/context/index.tsx","containers/Bank/Profile/styles.ts","containers/Bank/Profile/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RoleContext","createContext","RoleProvider","children","useState","role","setRole","Provider","value","ToggleSidebarContext","ToggleSidebarProvider","open","toggleSidebar","canToggle","useMediaQuery","maxWidth","menu","title","href","roleStaff","name","icon","roleCustomer","roleAdmin","SNavigator","styled","div","props","theme","logo","border","bg","main","SHandleButton","active","css","hover","SidebarStaffContext","SidebarStaffProvider","indexStaff","setIndexStaff","SidebarCustomerContext","SidebarCustomerProvider","indexCustomer","setIndexCustomer","SidebarAdminContext","SidebarAdminProvider","indexAdmin","setIndexAdmin","Navigator","useContext","ThemeContext","className","size","color","map","st","i","placement","onClick","overlay","trigger","style","cursor","marginTop","src","m","Item","callback","to","Divider","badge","length","Overlay","SInnerSidebar","text","Accountmanagement","SSidebar","SidebarCustomer","router","useRouteMatch","useEffect","NavigatorContext","NavigatorProvider","index","setIndex","CustomerManagement","SidebarStaff","SBank","Bank","SSignup","SLogo","SLogin","Login","level","layout","initialValues","remember","onFinish","values","console","log","onFinishFailed","errorInfo","autoComplete","marginBottom","label","rules","required","message","Password","block","type","htmlType","plain","fontWeight","Signup","success","min","getFieldValue","validator","_","Promise","reject","Error","resolve","mixinsFlexCenter","SOnboarding","Onboarding","alt","width","GlobalLoadingContext","isLoading","GLProvider","toggleLoading","GlobalLoadingScreen","SLoading","rotate","keyframes","AuthContext","info","AuthProvider","setInfo","ETheme","light","green","sub","dropdown","Call","send","receive","input","inactive","dark","CustomThemeProvider","themeType","setThemeType","storedTheme","localStorage","getItem","Object","includes","setItem","setTheme","nextTheme","ReactsContext","ReactsProvider","messageId","setMessageId","MyProvider","SProfile","Profile","history","useHistory","imgSrc","setImgSrc","goBack","onChange","e","target","files","URL","createObjectURL","accept","display","minWidth","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.445cbfca.chunk.js","sourcesContent":["import { createContext, ReactNode, useState } from \"react\";\n\ninterface IRoleContext {\n  role: string;\n  setRole: any;\n}\n\nexport const RoleContext = createContext<IRoleContext>(\n  {} as IRoleContext\n);\n\nconst RoleProvider = ({ children }: { children: ReactNode }) => {\n  const [role, setRole] = useState('customer');\n\n  return (\n    <RoleContext.Provider value={{ role, setRole }}>\n      {children}\n    </RoleContext.Provider>\n  );\n};\n\nexport default RoleProvider;\n","import { createContext, ReactNode, useState } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\n\ninterface IToggleSidebarContenxt {\n  open: boolean;\n  toggleSidebar: any;\n}\n\nexport const ToggleSidebarContext = createContext<IToggleSidebarContenxt>(\n  {} as IToggleSidebarContenxt\n);\n\nconst ToggleSidebarProvider = ({ children }: { children: ReactNode }) => {\n  const [open, toggleSidebar] = useState(false);\n\n  const canToggle = useMediaQuery({ maxWidth: 991 });\n\n  return (\n    <ToggleSidebarContext.Provider\n      value={{ open, toggleSidebar: canToggle ? toggleSidebar : null }}\n    >\n      {children}\n    </ToggleSidebarContext.Provider>\n  );\n};\n\nexport default ToggleSidebarProvider;\n","import { IconType } from \"react-icons\";\nimport { FaRegUser } from \"react-icons/fa\";\nimport { MdSupervisorAccount } from \"react-icons/md\";\n\nexport const menu = [\n  {\n    title: \"Profile\",\n    href: '/profile'\n  },\n];\n\nexport interface IRole {\n  name: string,\n  icon: any,\n}\n\nexport const roleStaff: IRole[] = [\n  {\n    name: \"Quản lý khách hàng\",\n    icon: <FaRegUser />,\n  },\n  {\n    name: \"Quản lý tài khoản\",\n    icon: <MdSupervisorAccount />,\n  }\n]\nexport const roleCustomer: IRole[] = [\n  {\n    name: \"Quản lý tài khoản\",\n    icon: <MdSupervisorAccount />,\n  },\n  {\n    name: \"Quản lý người dùng\",\n    icon: <MdSupervisorAccount />,\n  }\n]\nexport const roleAdmin: IRole[] = [\n  {\n    name: \"Quản lý Admin\",\n    icon: <FaRegUser />,\n  },\n  {\n    name: \"Quản lý Admin\",\n    icon: <FaRegUser />,\n  },\n]","import styled, { css } from \"styled-components\";\n\nexport const SNavigator = styled.div`\n  color: ${(props) => props.theme.theme.logo};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 300px;\n  min-width: 80px;\n  border-right: ${(props) => `1px solid ${props.theme.theme.border}`};\n  padding: 15px;\n  min-height: 500px;\n  overflow-y: auto;\n  overflow-x: hidden;\n  z-index: 1;\n\n  background-color: ${(props) => props.theme.theme.bg.main};\n\n  @media (max-width: 991px) {\n    border: none;\n  }\n\n  @media (max-width: 575px) {\n    width: 50px;\n    min-width: 60px;\n    padding: 15px 5px;\n  }\n\n  .logo {\n    margin-bottom: 20px;\n  }\n  .list {\n    flex-grow: 1;\n  }\n`;\n\nexport const SHandleButton = styled.div<{ active: boolean }>`\n  width: 200px;\n  height: 35px;\n  border-radius: 4px;\n  background-color: ${(props) =>\n    props.active ? props.theme.theme.bg.icon : \"transparent\"};\n  transition: 0.2s;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  cursor: pointer;\n  margin: 15px 0;\n  ${(props) =>\n    !props.active &&\n    css`\n      &:hover {\n        background-color: ${(props) => props.theme.theme.bg.hover};\n      }\n    `}\n\n  .img {\n    font-size: 16px;\n  }\n`;\n","import { createContext, ReactNode, useState } from \"react\";\n\ninterface ISidebarStaffContext {\n  indexStaff: number;\n  setIndexStaff: any;\n}\n\nexport const SidebarStaffContext = createContext<ISidebarStaffContext>(\n  {} as ISidebarStaffContext\n);\n\nconst SidebarStaffProvider = ({ children }: { children: ReactNode }) => {\n  const [indexStaff, setIndexStaff] = useState(0);\n\n  return (\n    <SidebarStaffContext.Provider value={{ indexStaff, setIndexStaff }}>\n      {children}\n    </SidebarStaffContext.Provider>\n  );\n};\n\nexport default SidebarStaffProvider;\n","import { createContext, ReactNode, useState } from \"react\";\n\ninterface ISidebarCustomerContext {\n  indexCustomer: number;\n  setIndexCustomer: any;\n}\n\nexport const SidebarCustomerContext = createContext<ISidebarCustomerContext>(\n  {} as ISidebarCustomerContext\n);\n\nconst SidebarCustomerProvider = ({ children }: { children: ReactNode }) => {\n  const [indexCustomer, setIndexCustomer] = useState(0);\n\n  return (\n    <SidebarCustomerContext.Provider value={{ indexCustomer, setIndexCustomer }}>\n      {children}\n    </SidebarCustomerContext.Provider>\n  );\n};\n\nexport default SidebarCustomerProvider;\n","import { createContext, ReactNode, useState } from \"react\";\n\ninterface ISidebarAdminContext {\n  indexAdmin: number;\n  setIndexAdmin: any;\n}\n\nexport const SidebarAdminContext = createContext<ISidebarAdminContext>(\n  {} as ISidebarAdminContext\n);\n\nconst SidebarAdminProvider = ({ children }: { children: ReactNode }) => {\n  const [indexAdmin, setIndexAdmin] = useState(0);\n\n  return (\n    <SidebarAdminContext.Provider value={{ indexAdmin, setIndexAdmin }}>\n      {children}\n    </SidebarAdminContext.Provider>\n  );\n};\n\nexport default SidebarAdminProvider;\n","import { Dropdown, Menu, Tooltip } from \"antd\";\nimport Avatar from \"antd/lib/avatar/avatar\";\nimport { useContext } from \"react\";\nimport {\n  FaRegUser,\n} from \"react-icons/fa\";\nimport { FiPhoneCall } from \"react-icons/fi\";\nimport { Link } from \"react-router-dom\";\nimport { NavigatorContext } from \"src/common/context/NavigatorContext\";\nimport { ToggleSidebarContext } from \"src/common/context/ToggleSidebarContext\";\nimport { ThemeContext } from \"styled-components\";\nimport { menu, roleAdmin, roleCustomer, roleStaff } from \"./store/data\";\nimport { SNavigator, SHandleButton } from \"./styles\";\nimport { AiTwotoneBank } from \"react-icons/ai\";\nimport { SidebarStaffContext } from \"src/common/context/SidebarStaffContext\";\nimport { SidebarCustomerContext } from \"src/common/context/SidebarCustomerContext\";\nimport { SidebarAdminContext } from \"src/common/context/SidebarAdminContext\";\n\nexport default function Navigator({ role }: { role: string }) {\n  const { theme } = useContext(ThemeContext);\n\n  const { indexStaff, setIndexStaff } = useContext(SidebarStaffContext);\n  const { indexCustomer, setIndexCustomer } = useContext(SidebarCustomerContext);\n  const { indexAdmin, setIndexAdmin } = useContext(SidebarAdminContext);\n  const { toggleSidebar } = useContext(ToggleSidebarContext);\n\n  return (\n    <SNavigator>\n      <div className=\"logo\">\n        <AiTwotoneBank size={30} color={theme.logo} />\n      </div>\n\n      <div className=\"list\">\n        {\n          role === \"staff\" ? (\n            roleStaff.map((st, i) => {\n              return (\n                <Tooltip placement=\"right\" title=\"\">\n                  <SHandleButton\n                    active={indexStaff === i}\n                    onClick={() => {\n                      setIndexStaff(i);\n                      toggleSidebar && toggleSidebar(true);\n                    }}\n                  >\n                    <div className=\"img\">\n                      {\n                        st.icon\n                      }\n                    </div>\n                    <span>{st.name}</span>\n                  </SHandleButton>\n                </Tooltip>\n              )\n            })\n          ) : role === \"customer\" ? (\n            roleCustomer.map((st, i) => {\n              return (\n                <Tooltip placement=\"right\" title=\"\">\n                  <SHandleButton\n                    active={indexCustomer === i}\n                    onClick={() => {\n                      setIndexCustomer(i);\n                      toggleSidebar && toggleSidebar(true);\n                    }}\n                  >\n                    <div className=\"img\">\n                      {\n                        st.icon\n                      }\n                    </div>\n                    <span>{st.name}</span>\n                  </SHandleButton>\n                </Tooltip>\n              )\n            })\n          ) : (\n            roleAdmin.map((st, i) => {\n              return (\n                <Tooltip placement=\"right\" title=\"\">\n                  <SHandleButton\n                    active={indexAdmin === i}\n                    onClick={() => {\n                      setIndexAdmin(i);\n                      toggleSidebar && toggleSidebar(true);\n                    }}\n                  >\n                    <div className=\"img\">\n                      {\n                        st.icon\n                      }\n                    </div>\n                    <span>{st.name}</span>\n                  </SHandleButton>\n                </Tooltip>\n              )\n            })\n          )\n        }\n      </div>\n\n\n      <Dropdown\n        placement=\"topRight\"\n        overlay={overlay(theme)}\n        trigger={[\"click\"]}\n      >\n        <Avatar\n          style={{ cursor: \"pointer\", marginTop: \"15px\" }}\n          size={40}\n          src=\"/images/avt-placeholder.png\"\n        />\n      </Dropdown>\n    </SNavigator>\n  );\n}\n\nconst overlay = (theme: any) => {\n  return (\n    <Menu>\n      {menu.map((m: any, i: number) => (\n        <Menu.Item className=\"dropdown_item\" key={i} onClick={m?.callback}>\n          {m?.href ? <Link to={m.href}>{m.title}</Link> : m?.title}\n        </Menu.Item>\n      ))}\n      <Menu.Divider />\n      <Menu.Item\n        style={{ color: theme.badge }}\n        className=\"dropdown_item logout\"\n        key={menu.length}\n      >\n        Log out\n      </Menu.Item>\n    </Menu>\n  );\n};\n","import styled from \"styled-components\";\n\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 5;\n`\n\nexport default Overlay","import styled from \"styled-components\";\n\nexport const SInnerSidebar = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-height: 100%;\n\n  .top {\n    padding: 15px;\n    display: flex;\n    align-items: center;\n    .header {\n      color: ${(props) => props.theme.theme.text.main};\n      font-size: 20px;\n      line-height: 24px;\n      font-weight: 600;\n      margin-bottom: 0;\n      display: flex;\n      & > svg {\n        display: none;\n        @media (max-width: 991px) {\n          display: block;\n          margin-right: 4px;\n          margin-top: 4px;\n        }\n      }\n    }\n    .icons {\n      margin-left: auto;\n      display: flex;\n      margin-right: -4px;\n      margin-bottom: -4px;\n    }\n  }\n\n  .search {\n    padding: 5px 15px;\n    .ant-input-search {\n      border-radius: 4px;\n      .ant-input {\n        background-color: transparent;\n        border-color: ${(props) => props.theme.theme.border};\n        color: ${(props) => props.theme.theme.text.main};\n      }\n    }\n  }\n`;\n","import { Input } from \"antd\";\nimport React, { useContext } from \"react\";\nimport { FaChevronLeft } from \"react-icons/fa\";\nimport { ToggleSidebarContext } from \"src/common/context/ToggleSidebarContext\";\nimport { ThemeContext } from \"styled-components\";\nimport { SInnerSidebar } from \"./styles\";\n\nexport default function Accountmanagement() {\n  const { theme } = useContext(ThemeContext);\n  const onSearch = (value: any) => {\n    console.log(value);\n  };\n\n  const { toggleSidebar } = useContext(ToggleSidebarContext);\n\n  return (\n    <SInnerSidebar>\n      <div className=\"top\">\n        <h3\n          className=\"header\"\n          onClick={() => toggleSidebar && toggleSidebar(false)}\n        >\n          <FaChevronLeft color={theme.text.main} size={16} />\n          Quản lý tài khoản\n        </h3>\n      </div>\n    </SInnerSidebar>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const SSidebar = styled.div<{ open: boolean }>`\n  width: calc(100% - 200px);\n  height: 100%;\n  background-color: ${(props) => props.theme.theme.bg.main};\n  transition: 0.2s;\n\n  @media (max-width: 991px) {\n    position: fixed;\n    right: ${(props) => (props.open ? \"0px\" : \"-300px\")};\n    top: 0;\n    bottom: 0;\n    height: 100%;\n    z-index: 6;\n  }\n`;\n","import React, { useContext, useEffect } from \"react\";\nimport { useRouteMatch } from \"react-router\";\nimport Overlay from \"src/common/components/Overlay\";\nimport { NavigatorContext } from \"src/common/context/NavigatorContext\";\nimport { SidebarCustomerContext } from \"src/common/context/SidebarCustomerContext\";\nimport { ToggleSidebarContext } from \"src/common/context/ToggleSidebarContext\";\nimport Accountmanagement from \"./Accountmanagement\";\nimport { SSidebar } from \"./styles\";\n\nexport default function SidebarCustomer() {\n  const { indexCustomer } = useContext(SidebarCustomerContext);\n  const { open, toggleSidebar } = useContext(ToggleSidebarContext);\n\n  const router = useRouteMatch();\n\n  useEffect(() => {\n    toggleSidebar && toggleSidebar(false);\n  }, [router, toggleSidebar])\n\n  return (\n    <>\n      {open && (\n        <Overlay\n          onClick={() => {\n            toggleSidebar && toggleSidebar(false);\n          }}\n        />\n      )}\n      <SSidebar open={open}>\n        {indexCustomer === 0 && <Accountmanagement />}\n      </SSidebar>\n    </>\n  );\n}\n","import { createContext, ReactNode, useState } from \"react\";\n\ninterface INavigatorContenxt {\n  index: number;\n  setIndex: any;\n}\n\nexport const NavigatorContext = createContext<INavigatorContenxt>(\n  {} as INavigatorContenxt\n);\n\nconst NavigatorProvider = ({ children }: { children: ReactNode }) => {\n  const [index, setIndex] = useState(0);\n\n  return (\n    <NavigatorContext.Provider value={{ index, setIndex }}>\n      {children}\n    </NavigatorContext.Provider>\n  );\n};\n\nexport default NavigatorProvider;\n","import styled from \"styled-components\";\n\nexport const SInnerSidebar = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-height: 100%;\n\n  .top {\n    padding: 15px;\n    display: flex;\n    align-items: center;\n    .header {\n      color: ${(props) => props.theme.theme.text.main};\n      font-size: 20px;\n      line-height: 24px;\n      font-weight: 600;\n      margin-bottom: 0;\n      display: flex;\n      & > svg {\n        display: none;\n        @media (max-width: 991px) {\n          display: block;\n          margin-right: 4px;\n          margin-top: 4px;\n        }\n      }\n    }\n    .icons {\n      margin-left: auto;\n      display: flex;\n      margin-right: -4px;\n      margin-bottom: -4px;\n    }\n  }\n\n  .search {\n    padding: 5px 15px;\n    .ant-input-search {\n      border-radius: 4px;\n      .ant-input {\n        background-color: transparent;\n        border-color: ${(props) => props.theme.theme.border};\n        color: ${(props) => props.theme.theme.text.main};\n      }\n    }\n  }\n`;\n","import { Input } from \"antd\";\nimport React, { useContext } from \"react\";\nimport { FaChevronLeft } from \"react-icons/fa\";\nimport { NavigatorContext } from \"src/common/context/NavigatorContext\";\nimport { ToggleSidebarContext } from \"src/common/context/ToggleSidebarContext\";\nimport { ThemeContext } from \"styled-components\";\nimport { SInnerSidebar } from \"./styles\";\n\nexport default function CustomerManagement() {\n  const { theme } = useContext(ThemeContext);\n  const onSearch = (value: any) => {\n    console.log(value);\n  };\n\n  const { toggleSidebar } = useContext(ToggleSidebarContext);\n  const { setIndex } = useContext(NavigatorContext);\n\n  return (\n    <SInnerSidebar>\n      <div className=\"top\">\n        <h3\n          className=\"header\"\n          onClick={() => toggleSidebar && toggleSidebar(false)}\n        >\n          <FaChevronLeft color={theme.text.main} size={16} />\n          Quản lý khách hàng\n        </h3>\n      </div>\n    </SInnerSidebar>\n  );\n}\n","import { Input } from \"antd\";\nimport React, { useContext } from \"react\";\nimport { FaChevronLeft } from \"react-icons/fa\";\nimport { ToggleSidebarContext } from \"src/common/context/ToggleSidebarContext\";\nimport { ThemeContext } from \"styled-components\";\nimport { SInnerSidebar } from \"../CustomerManagement/styles\";\n\nexport default function Accountmanagement() {\n  const { theme } = useContext(ThemeContext);\n  const onSearch = (value: any) => {\n    console.log(value);\n  };\n\n  const { toggleSidebar } = useContext(ToggleSidebarContext);\n\n  return (\n    <SInnerSidebar>\n      <div className=\"top\">\n        <h3\n          className=\"header\"\n          onClick={() => toggleSidebar && toggleSidebar(false)}\n        >\n          <FaChevronLeft color={theme.text.main} size={16} />\n          Quản lý tài khoản\n        </h3>\n      </div>\n    </SInnerSidebar>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const SSidebar = styled.div<{ open: boolean }>`\n  width: calc(100% - 200px);\n  height: 100%;\n  background-color: ${(props) => props.theme.theme.bg.main};\n  transition: 0.2s;\n\n  @media (max-width: 991px) {\n    position: fixed;\n    right: ${(props) => (props.open ? \"0px\" : \"-300px\")};\n    top: 0;\n    bottom: 0;\n    height: 100%;\n    z-index: 6;\n  }\n`;\n","import React, { useContext, useEffect } from \"react\";\nimport { useRouteMatch } from \"react-router\";\nimport Overlay from \"src/common/components/Overlay\";\nimport { NavigatorContext } from \"src/common/context/NavigatorContext\";\nimport { ToggleSidebarContext } from \"src/common/context/ToggleSidebarContext\";\nimport CustomerManagement from \"./CustomerManagement\";\nimport Accountmanagement from \"./Accountmanagement\";\nimport { SSidebar } from \"./styles\";\nimport { SidebarStaffContext } from \"src/common/context/SidebarStaffContext\";\n\nexport default function SidebarStaff() {\n  const { indexStaff } = useContext(SidebarStaffContext);\n  const { open, toggleSidebar } = useContext(ToggleSidebarContext);\n\n  const router = useRouteMatch();\n\n  useEffect(() => {\n    toggleSidebar && toggleSidebar(false);\n  }, [router, toggleSidebar])\n\n  return (\n    <>\n      {open && (\n        <Overlay\n          onClick={() => {\n            toggleSidebar && toggleSidebar(false);\n          }}\n        />\n      )}\n      <SSidebar open={open}>\n        {indexStaff === 0 && <CustomerManagement />}\n        {indexStaff === 1 && <Accountmanagement />}\n      </SSidebar>\n    </>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const SBank = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-color: ${(props) => props.theme.theme.bg.main};\n  display: flex;\n  min-height: 500px;\n`;\n","import React, { useContext } from 'react'\nimport { RoleContext } from 'src/common/context/RoleContext'\nimport Navigator from './Navigator'\nimport SidebarCustomer from './SidebarCustomer'\nimport SidebarStaff from './SidebarStaff'\nimport { SBank } from './styles'\n\nexport default function Bank() {\n  const { role } = useContext(RoleContext);\n\n  return (\n    <SBank>\n      <Navigator role={role} />\n      {\n        role === \"staff\" ? (\n          <SidebarStaff />\n        ) : role === \"customer\" ? (\n          <SidebarCustomer />\n        ) : \"\"\n      }\n    </SBank>\n  )\n}\n","import styled from \"styled-components\";\n\nexport const SSignup = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-image: url(\"/images/bg-main.jpg\");\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  padding: 15px;\n\n  overflow-y: auto;\n\n  .wrapper {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    background-color: rgba(255, 255, 255, 0.7);\n    padding: 40px;\n    border-radius: 8px;\n    border: 1px solid #e6e6e5;\n    @media(max-width: 767px) {\n      padding: 20px;\n    }\n  }\n`;\n\nexport const SLogo = styled.div`\n  width: 45px;\n  height: 45px;\n  border-radius: 8px;\n  background-color: #1890ff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n`","import styled from \"styled-components\";\nimport { SSignup } from \"../Signup/styles\";\n\nexport const SLogin = styled(SSignup)``;","import React from \"react\";\nimport { SLogin } from \"./styles\";\nimport { Button, Divider, Form, Input } from \"antd\";\nimport Title from \"antd/lib/typography/Title\";\nimport { Link } from \"react-router-dom\";\nimport { SLogo } from \"../Signup/styles\";\nimport { AiTwotoneBank } from \"react-icons/ai\";\n\nexport default function Login() {\n  const onFinish = (values: any) => {\n    console.log(\"Success:\", values);\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <SLogin>\n      <div className=\"wrapper\">\n        <SLogo>\n          <AiTwotoneBank\n            size={25}\n            color=\"white\"\n          />\n        </SLogo>\n        <Title level={4}>Login</Title>\n        <Form\n          name=\"basic\"\n          layout=\"vertical\"\n          initialValues={{ remember: true }}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          autoComplete=\"off\"\n        >\n          <Form.Item\n            style={{ marginBottom: \"15px\" }}\n            label=\"Username\"\n            name=\"username\"\n            rules={[{ required: true, message: \"Please input your username!\" }]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            style={{ marginBottom: \"15px\" }}\n            label=\"Password\"\n            name=\"password\"\n            rules={[{ required: true, message: \"Please input your password!\" }]}\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item style={{ marginBottom: \"10px\" }}>\n            <Button block type=\"primary\" htmlType=\"submit\">\n              Login\n            </Button>\n          </Form.Item>\n\n          <Divider plain>\n            or <Link to=\"/signup\"><span style={{ fontWeight: 600 }}>Register</span></Link>\n          </Divider>\n        </Form>\n      </div>\n    </SLogin>\n  );\n}\n","import React from \"react\";\nimport { SLogo, SSignup } from \"./styles\";\nimport { Button, Divider, Form, Input, message } from \"antd\";\nimport Title from \"antd/lib/typography/Title\";\nimport { Link } from \"react-router-dom\";\nimport { AiTwotoneBank } from \"react-icons/ai\";\n\nexport default function Signup() {\n  const onFinish = (values: any) => {\n    console.log(\"Success:\", values);\n    message.success(\"Login success\");\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <SSignup>\n      <div className=\"wrapper\">\n        <SLogo>\n          <AiTwotoneBank size={25} color=\"white\" />\n        </SLogo>\n        <Title level={4}>Register</Title>\n        <Form\n          name=\"basic\"\n          layout=\"vertical\"\n          initialValues={{ remember: true }}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          autoComplete=\"off\"\n        >\n          <Form.Item\n            style={{ marginBottom: \"15px\" }}\n            label=\"Username\"\n            name=\"username\"\n            rules={[{ required: true, message: \"Please input your username!\" }]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            style={{ marginBottom: \"15px\" }}\n            label=\"Password\"\n            name=\"password\"\n            rules={[\n              { required: true, message: \"Please input your password!\" },\n              { min: 6, message: \"Password must be at least 6 chars\" },\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Confirm password\"\n            name=\"confirm_password\"\n            rules={[\n              { required: true, message: \"Please input your password!\" },\n              { min: 6, message: \"Password must be at least 6 chars\" },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue(\"password\") === value) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(new Error(\"Passwords do not match!\"));\n                },\n              }),\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item style={{ marginBottom: \"10px\" }}>\n            <Button block type=\"primary\" htmlType=\"submit\">\n              Register\n            </Button>\n          </Form.Item>\n\n          <Divider plain>\n            or <Link to=\"/login\">\n              <span style={{ fontWeight: 600 }}>Login</span>\n            </Link>\n          </Divider>\n        </Form>\n      </div>\n    </SSignup>\n  );\n}\n","import { css } from \"styled-components\";\n\nexport const mixinsFlexCenter = css`\n  display: flex !important;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const mixinAbsoluteFill = css`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n`;\n\nexport const mixinTextOverflow = (lineNumber: number) => `\n  display: -webkit-box;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  -webkit-line-clamp: ${lineNumber};\n  -webkit-box-orient: vertical;\n`;\n\nexport const mixinAbsoluteCenter = css`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const mixinFlexWrapAlignCenter = css`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\n\nexport const mixinsScrollBar = (\n  width?: string,\n  height?: string,\n  borderRadius?: string,\n  trackColor?: string,\n  thumbColor?: string,\n  thumbHoverColor?: string\n) => `\n  ::-webkit-scrollbar {\n    width: ${width || '6px'};\n    height: ${height || '6px'};\n  }\n\n  ::-webkit-scrollbar-track {\n    background: ${trackColor || 'white'};\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: ${thumbColor || '#c1c1c1'};\n    border-radius: ${borderRadius || '6px'};\n  }\n\n  @media (hover: hover) and (pointer: fine) {\n    ::-webkit-scrollbar-thumb:hover {\n      background: ${thumbHoverColor || '#555'};\n    }\n  }\n`;","import { mixinsFlexCenter } from \"src/common/styles/mixins\";\nimport styled from \"styled-components\";\n\nexport const SOnboarding = styled.div`\n  background-image: url(\"/images/bg-main.jpg\");\n  width: 100vw;\n  height: 100vh;\n  ${mixinsFlexCenter};\n  background-size: cover;\n  background-position: center;\n  overflow: hidden;\n  flex-direction: column;\n  img {\n    border-radius: 10px;\n    width: 400px;\n  }\n  & > p {\n    font-weight: 700;\n    display: flex;\n    align-items: center;\n    margin-top: 27px;\n    font-size: 30px;\n    margin-bottom: 32px;\n    color: aqua;\n    text-transform: uppercase;\n    background: #f0f8ffd6;\n    padding: 15px;\n    border-radius: 10px;\n  }\n`;\n","import { Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { SOnboarding } from \"./styles\";\n\nexport default function Onboarding() {\n\n  return (\n    <SOnboarding>\n      <img src=\"/images/bank.png\" alt=\"video\" width={250} />\n      <p>Bank branch manager</p>\n      <Link to=\"/login\">\n        <Button type=\"primary\">\n          Login\n        </Button>\n      </Link>\n    </SOnboarding>\n  );\n}\n","import { createContext, ReactNode, useState } from \"react\";\n\ninterface IGlobalLoading {\n  isLoading: boolean;\n  toggleLoading: any;\n}\n\nexport const GlobalLoadingContext = createContext({isLoading: false} as IGlobalLoading);\n\nconst GLProvider = ({children} :  { children: ReactNode }) => {\n\n  const [isLoading, toggleLoading] = useState(false);\n\n  return (\n    <GlobalLoadingContext.Provider value={{isLoading, toggleLoading}}>\n      {children}\n    </GlobalLoadingContext.Provider>\n  )\n}\n\nexport default GLProvider;","import React, { useContext } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { GlobalLoadingContext } from \"../context/GlobalLoadingContext\";\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\";\n\nexport default function GlobalLoadingScreen() {\n  const { isLoading } = useContext(GlobalLoadingContext);\n\n  if (!isLoading) return <></>;\n\n  return (\n    <SLoading>\n      <span className=\"spinner\">\n        <AiOutlineLoading3Quarters size={30} />\n      </span>\n    </SLoading>\n  );\n}\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst SLoading = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${props => props.theme.theme.bg.main};\n  .spinner {\n    width: 30px;\n    height: 30px;\n    animation: ${rotate} linear infinite 1s;\n    svg path {\n      fill: ${(props) => props.theme.theme.logo};\n    }\n  }\n`;\n","import { createContext, ReactNode, useState } from \"react\";\n\ninterface IAuthContext {\n  info: any;\n  setInfo: any;\n}\n\nexport const AuthContext = createContext({ info: null } as IAuthContext);\n\nexport default function AuthProvider({ children }: { children: ReactNode }) {\n  const [info, setInfo] = useState(null);\n\n  return (\n    <AuthContext.Provider value={{ info, setInfo }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n","const theme = {\n  light: {\n    logo: \"#1890ff\",\n    green: \"#20c997\",\n    bg: {\n      main: \"white\",\n      sub: \"rgba(0,123,255,.05)\",\n      dropdown: 'white',\n      Call: \"#eaedf2\",\n      message: {\n        send: \"#1890ff\",\n        receive: \"white\",\n      },\n      hover: \"#f2f0f0\",\n      icon: \"#e6e6e6\",\n    },\n    text: {\n      message: {\n        send: \"white\",\n        receive: \"black\",\n      },\n      input: \"#495057\",\n      main: \"black\",\n      sub: \"#828282\",\n    },\n    border: \"#ced4da\",\n    badge: \"#e91e63\",\n    icon: {\n      inactive: \"#37474f\",\n      active: \"#1890ff\",\n    },\n  },\n  dark: {\n    logo: \"#1890ff\",\n    green: \"#20c997\",\n    bg: {\n      main: \"#263238\",\n      sub: \"rgba(0,123,255,.05)\",\n      dropdown: '#455a64',\n      Call: \"#263238\",\n      message: {\n        send: \"#1890ff\",\n        receive: \"#4c636e\",\n      },\n      input: \"#1a2236\",\n      hover: \"#4b505c\",\n      icon: \"#1890ff\",\n    },\n    text: {\n      message: {\n        send: \"white\",\n        receive: \"#d3d4d5\",\n      },\n      input: \"#495057\",\n      main: \"#d3d4d5\",\n      sub: \"#828282\",\n    },\n    border: \"#37474f\",\n    badge: \"#e91e63\",\n    icon: {\n      inactive: \"rgba(255, 255, 255, 0.7)\",\n      active: \"rgba(255, 255, 255, 0.7)\",\n    },\n  },\n};\n\nexport default theme;\n","import { ReactNode, useEffect, useState } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport theme from \"../styles/theme\";\n\nexport enum ETheme {\n  LIGHT = \"light\",\n  DARK = \"dark\",\n}\n\nconst CustomThemeProvider = ({ children }: { children: ReactNode }) => {\n  const [themeType, setThemeType] = useState<ETheme | null>(null);\n\n  const setTheme = () => {\n    const nextTheme = themeType === ETheme[\"LIGHT\"] ? ETheme[\"DARK\"] : ETheme[\"LIGHT\"]\n    setThemeType(nextTheme);\n    localStorage.setItem('theme', nextTheme);\n  };\n\n  useEffect(() => {\n    const storedTheme = localStorage.getItem('theme') as ETheme;\n    if(Object.values(ETheme).includes(storedTheme)) {\n      setThemeType(storedTheme);\n    }\n    else {\n      setThemeType(ETheme[\"LIGHT\"]);\n      localStorage.setItem('theme', ETheme[\"LIGHT\"]);\n    }\n  }, [])\n\n  if(!themeType) return <></>\n\n  return (\n    <ThemeProvider theme={{ theme: theme[themeType], setTheme, themeType }}>\n      {children}\n    </ThemeProvider>\n  );\n};\n\nexport default CustomThemeProvider;\n","import React, { createContext, ReactNode, useState } from \"react\";\n\ninterface IReactsContext {\n  messageId: number | null;\n  setMessageId: React.Dispatch<React.SetStateAction<number | null>>;\n}\n\nexport const ReactsContext = createContext<IReactsContext>(\n  {} as IReactsContext\n);\n\nconst ReactsProvider = ({ children }: { children: ReactNode }) => {\n  const [messageId, setMessageId] = useState<number | null>(null);\n\n  return (\n    <ReactsContext.Provider\n      value={{ messageId, setMessageId }}\n    >\n      {children}\n    </ReactsContext.Provider>\n  );\n};\n\nexport default ReactsProvider;\n","import { ReactNode } from \"react\";\nimport AuthProvider from \"./AuthContext\";\nimport GLProvider from \"./GlobalLoadingContext\";\nimport NavigatorProvider from \"./NavigatorContext\";\nimport CustomThemeProvider from \"./ThemeContext\";\nimport ToggleSidebarProvider from \"./ToggleSidebarContext\";\nimport ReactsProvider from \"./ReactContext\";\nimport SidebarStaffProvider from \"./SidebarStaffContext\";\nimport SidebarCustomerProvider from \"./SidebarCustomerContext\";\nimport SidebarAdminProvider from \"./SidebarAdminContext\";\nimport RoleProvider from \"./RoleContext\";\n\nexport default function MyProvider({ children }: { children: ReactNode }) {\n  return (\n    <CustomThemeProvider>\n      <GLProvider>\n        <AuthProvider>\n          <RoleProvider>\n            <NavigatorProvider>\n              <SidebarAdminProvider>\n                <SidebarStaffProvider>\n                  <SidebarCustomerProvider>\n                    <ToggleSidebarProvider>\n                      <ReactsProvider>\n                        {children}\n                      </ReactsProvider>\n                    </ToggleSidebarProvider>\n                  </SidebarCustomerProvider>\n                </SidebarStaffProvider>\n              </SidebarAdminProvider>\n            </NavigatorProvider>\n          </RoleProvider>\n        </AuthProvider>\n      </GLProvider>\n    </CustomThemeProvider>\n  );\n}\n","import { mixinsFlexCenter } from \"src/common/styles/mixins\";\nimport styled from \"styled-components\";\n\nexport const SProfile = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-color: ${props => props.theme.theme.bg.main};\n  ${mixinsFlexCenter};\n  flex-direction: column;\n\n  .back {\n    position: fixed;\n    top: 40px;\n    left: 40px;\n    z-index: 5;\n    cursor: pointer;\n    @media(max-width: 991px) {\n      top: 20px;\n      left: 20px;\n      width: 20px;\n      height: 20px;\n    }\n  }\n\n  .name {\n    color: ${props => props.theme.theme.text.main};\n    font-size: 20px;\n    font-weight: 600;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n  .avt {\n    cursor: pointer;\n    position: relative;\n    .icon {\n      position: absolute;\n      bottom: 0;\n      right: 0;\n    }\n  }\n`","import { Button } from \"antd\";\nimport Avatar from \"antd/lib/avatar/avatar\";\nimport React, { useContext, useState } from \"react\";\nimport { FaArrowLeft, FaCamera } from \"react-icons/fa\";\nimport { useHistory } from \"react-router\";\nimport { ThemeContext } from \"styled-components\";\nimport { SProfile } from \"./styles\";\n\nexport default function Profile() {\n  const { theme } = useContext(ThemeContext);\n  const history = useHistory();\n\n  const [imgSrc, setImgSrc] = useState<string | null>(null);\n\n  const onChange = (e: any) => {\n    console.log(e.target.files)\n    const imgSrc = URL.createObjectURL(e.target.files[0]);\n    setImgSrc(imgSrc);\n  }\n\n  return (\n    <SProfile>\n      <FaArrowLeft\n        color={theme.icon.inactive}\n        className=\"back\"\n        onClick={() => history.goBack()}\n        size={30}\n      />\n      <label className=\"avt\">\n        <Avatar src={imgSrc || \"/images/avt-placeholder.png\"} size={80} />\n        <FaCamera color={theme.icon.inactive} className=\"icon\" size={20} />\n        <input\n          type=\"file\"\n          onChange={onChange}\n          accept=\"image/png, image/jpeg\"\n          name=\"avt\"\n          style={{ display: \"none\" }}\n        />\n      </label>\n      <div className=\"name\">@sonht</div>\n      <Button style={{ minWidth: \"100px\" }} type=\"primary\">\n        Save\n      </Button>\n    </SProfile>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Bank from \"./containers/Bank\";\nimport Login from \"./containers/Login\";\nimport Signup from \"./containers/Signup\";\nimport Onboarding from \"./containers/Onboarding\";\nimport GlobalLoadingScreen from \"./common/components/GlobalLoadingScreen\";\nimport MyProvider from \"./common/context\";\n\nimport \"./app.css\";\nimport \"antd/dist/antd.css\";\nimport Profile from \"./containers/Bank/Profile\";\n\nexport default function App() {\n\n  return (\n    <MyProvider>\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Onboarding />\n          </Route>\n          <Route path=\"/bank\" exact>\n            <Bank />\n          </Route>\n          <Route path=\"/signup\" exact>\n            <Signup />\n          </Route>\n          <Route path=\"/login\" exact>\n            <Login />\n          </Route>\n          <Route path=\"/profile\" exact>\n            <Profile />\n          </Route>\n        </Switch>\n      </Router>\n      <GlobalLoadingScreen />\n    </MyProvider>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}